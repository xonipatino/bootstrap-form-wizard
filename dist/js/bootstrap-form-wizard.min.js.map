{"version":3,"file":"bootstrap-form-wizard.min.js","sources":["../../src/ts/DefaultOptions.ts","../../src/ts/BootstrapFormWizard.ts"],"sourcesContent":["/**\r\n * Propiedades y ajustes predeterminados para las opciones de Bootstrap Form Wizard.\r\n * @const {Object}\r\n */\r\nconst defaultOptions: {\r\n    backBtn?: HTMLButtonElement,\r\n    class   : {\r\n        activeStep: string,\r\n    },\r\n    lang: {\r\n        backBtn             : string,\r\n        nextBtn             : string,\r\n        nextBtnSubmit       : string,\r\n        fieldReqNotFocusable: string,\r\n    }\r\n    nextBtn?              : HTMLButtonElement,\r\n    onSubmit?             : Function,\r\n    onNext?               : Function,\r\n    onBack?               : Function,\r\n    onValidated?          : Function,\r\n    start                 : number,\r\n    submitForm            : boolean,\r\n    useBootstrapValidation: boolean,\r\n} = {\r\n    backBtn: undefined,\r\n    class  : {\r\n        activeStep: 'active',\r\n    },\r\n    lang: {\r\n        backBtn             : '< Back',\r\n        nextBtn             : 'Next >',\r\n        nextBtnSubmit       : 'Send',\r\n        fieldReqNotFocusable: 'A required field in the form is not focusable.',\r\n    },\r\n    nextBtn               : undefined,\r\n    onSubmit              : undefined,\r\n    onNext                : undefined,\r\n    onBack                : undefined,\r\n    onValidated           : undefined,\r\n    start                 : 1,\r\n    submitForm            : true,\r\n    useBootstrapValidation: false,\r\n}\r\n\r\nexport default defaultOptions;\r\n","/**\r\n * Bootstrap Form Wizard\r\n * @requires\r\n * @author Nixon Fabian Pati√±o Pacheco <xoni.patino@outlook.com>.\r\n * @version 1.0.0.\r\n * \r\n * @summary\r\n * - Falta agregar el codigo para validacion con bootstrap.\r\n * - Falta poner el atributo step como solo lectura, a traves de la function Object.defineProperty()\r\n */\r\n\r\nimport { Tab } from 'bootstrap';\r\nimport defaultOptions from './DefaultOptions';\r\n\r\nexport default class BootstrapFormWizard\r\n{\r\n    public static instances: Array<BootstrapFormWizard> = [];\r\n    public static defaultOptions: typeof defaultOptions = defaultOptions;\r\n\r\n    public readonly id   : string;\r\n    public element       : HTMLFormElement;\r\n    public elementWrapper: Element;\r\n    public options       : typeof defaultOptions;\r\n    public step          : number;\r\n    public stepList      : NodeListOf<HTMLElement>;\r\n    public stepPanelList : NodeListOf<HTMLElement>;\r\n\r\n    constructor(_dom: HTMLFormElement|string, _opts:  object = {}) {\r\n        // --\r\n        this.element        = (typeof _dom == 'string') ? document.querySelector(_dom) : _dom;\r\n        this.id             = (new Date()).getTime().toString();\r\n        this.elementWrapper = (this.element.dataset.bfwWrapper) ? document.querySelector(this.element.dataset.bfwWrapper) : this.element;\r\n\r\n        if ((!this.element) || (this.element.tagName.toLowerCase() != 'form'))\r\n            throw new Error('The form element is invalid.');\r\n        else if (!this.elementWrapper)\r\n            throw new Error('The wrapper element is invalid.');\r\n\r\n        this.element.id = (this.element.id) ? this.element.id : this.id;\r\n\r\n        // --\r\n        this.options = Object.assign(\r\n            {},\r\n            defaultOptions,\r\n            {\r\n                backBtn: this.elementWrapper.querySelector('button[data-bfw-action=\"back\"]'),\r\n                nextBtn: this.elementWrapper.querySelector('button[data-bfw-action=\"next\"]'),\r\n            },\r\n            _opts\r\n        );\r\n\r\n        if (\r\n            (!this.options.backBtn) || (this.options.backBtn.tagName.toLowerCase() != 'button') ||\r\n            (!this.options.nextBtn) || (this.options.nextBtn.tagName.toLowerCase() != 'button')\r\n        )\r\n            throw new Error('The selector of the back or next button is invalid.');\r\n\r\n        // --\r\n        this.options.backBtn.type      = 'button';\r\n        this.options.backBtn.innerHTML = this.options.lang.backBtn;\r\n        this.options.nextBtn.type      = 'button';\r\n        this.options.backBtn.setAttribute('form', this.element.id);\r\n        this.options.nextBtn.setAttribute('form', this.element.id);\r\n\r\n        // --\r\n        this.options.backBtn.onclick = event => { this.back() };\r\n        this.options.nextBtn.onclick = event => { this.next() };\r\n        this.element.onreset         = event => { this.goTo(1) };\r\n        this.element.onsubmit        = event => {\r\n            if (this.options.submitForm) {\r\n                if (typeof this.options.onSubmit == 'function')\r\n                    this.options.onSubmit(event);\r\n            }\r\n            else\r\n                event.preventDefault();\r\n        };\r\n\r\n        // --\r\n        this.loadListSteps();\r\n\r\n        // --\r\n        this.goTo(this.options.start);\r\n\r\n        // --\r\n        BootstrapFormWizard.instances.push(this);\r\n    }\r\n\r\n    // --\r\n    private checkValidityForm(): boolean {\r\n        let isValid = true;\r\n\r\n        if (!this.element.noValidate) {\r\n            if (!this.element.checkValidity()) {\r\n                let parentStepPanelElem: HTMLElement,\r\n                    inStepPanel        : boolean,\r\n                    arrStepPanel = Array.from(this.stepPanelList);\r\n\r\n                isValid = Array.from(this.element.elements)\r\n                    .filter(elem => {\r\n                        if ((elem == this.options.backBtn) || (elem == this.options.nextBtn))\r\n                            return false;\r\n                        else {\r\n                            parentStepPanelElem = elem.parentElement;\r\n                            inStepPanel = false;\r\n                            while (parentStepPanelElem) {\r\n                                if (arrStepPanel.includes(parentStepPanelElem)) {\r\n                                    inStepPanel = true;\r\n                                    return (arrStepPanel.indexOf(parentStepPanelElem) < this.step);\r\n                                }\r\n                                else if (parentStepPanelElem == this.elementWrapper)\r\n                                    break;\r\n\r\n                                parentStepPanelElem = parentStepPanelElem.parentElement;\r\n                            }\r\n\r\n                            if (!inStepPanel) {\r\n                                let bfwInStep = Number((<HTMLInputElement>elem).dataset.bfwInStep);\r\n                                if (!bfwInStep) bfwInStep = 1;\r\n                                return (bfwInStep <= this.step);\r\n                            }\r\n                        }\r\n                    })\r\n                    .every(elem => (<HTMLInputElement>elem).checkValidity());\r\n            }\r\n\r\n            if (typeof this.options.onValidated == 'function')\r\n                isValid = this.options.onValidated(isValid);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    // --\r\n    private reportValidityForm() {\r\n        if (this.options.useBootstrapValidation) {}\r\n        else {\r\n            let invalidElem = Array.from(this.element.elements).find(elem => !(<HTMLInputElement>elem).checkValidity());\r\n\r\n            if (invalidElem) {\r\n                let parentStepPanelElem = invalidElem.parentElement,\r\n                    inStepPanel         = false,\r\n                    arrStepPanel        = Array.from(this.stepPanelList);\r\n\r\n                while (parentStepPanelElem) {\r\n                    if (arrStepPanel.includes(parentStepPanelElem)) {\r\n                        inStepPanel = true;\r\n                        this.goTo(arrStepPanel.indexOf(parentStepPanelElem) + 1);\r\n                        break;\r\n                    }\r\n                    else if (parentStepPanelElem == this.elementWrapper)\r\n                        break;\r\n\r\n                    parentStepPanelElem = parentStepPanelElem.parentElement;\r\n                }\r\n\r\n                if (!inStepPanel) {\r\n                    let bfwInStep = Number((<HTMLInputElement>invalidElem).dataset.bfwInStep);\r\n                    if (!bfwInStep) bfwInStep = 1;\r\n\r\n                    this.goTo(bfwInStep);\r\n                }\r\n\r\n                if ((<HTMLInputElement>invalidElem).reportValidity())\r\n                    alert(this.options.lang.fieldReqNotFocusable);\r\n            }\r\n        }\r\n    } \r\n\r\n    // --\r\n    public loadListSteps() {\r\n        this.stepList = this.elementWrapper.querySelectorAll('[data-bs-toggle=\"step\"]');\r\n\r\n        if (this.stepList.length == 0)\r\n            throw new Error('No step elements were found in the list.');\r\n        else {\r\n            let arrSelectors: Array<string> = [];\r\n\r\n            this.stepList.forEach((stepElem, index) => {\r\n                let stepPanelSelector = (stepElem.dataset.bsTarget) ? stepElem.dataset.bsTarget : stepElem.getAttribute('href'),\r\n                    stepPanelElem     = this.elementWrapper.querySelector(stepPanelSelector),\r\n                    stepNum           = (index + 1).toString();\r\n\r\n                if (stepPanelElem) {\r\n                    stepPanelElem.role = 'steppanel';\r\n                    stepPanelElem.setAttribute('panel', stepNum);\r\n\r\n                    arrSelectors.push(stepPanelSelector);\r\n                }\r\n                else\r\n                    throw new Error('The step panel for one of the steps in the list was not found.');\r\n\r\n                stepElem.setAttribute('step', stepNum);\r\n                stepElem.addEventListener('shown.bs.tab', event => {\r\n                    let currentStepElem  = <HTMLElement>event.target,\r\n                        indexCurrentStep = Array.from(this.stepList).indexOf(currentStepElem);\r\n\r\n                    this.step = indexCurrentStep + 1;\r\n                    \r\n                    if (this.step == 1)\r\n                        this.options.backBtn.setAttribute('disabled', '');\r\n                    else\r\n                        this.options.backBtn.removeAttribute('disabled');\r\n                    this.options.nextBtn.innerHTML = (this.step == this.stepList.length) ? this.options.lang.nextBtnSubmit : this.options.lang.nextBtn;\r\n                    this.options.nextBtn.type      = 'button';\r\n                });\r\n            });\r\n            \r\n            this.stepPanelList = this.elementWrapper.querySelectorAll(arrSelectors.join(', '));\r\n        }\r\n    }\r\n\r\n    // --\r\n    public reset() {\r\n        this.element.reset();\r\n    }\r\n\r\n    // --\r\n    public goTo(_step: number) {\r\n        let stepElem = this.stepList.item(_step - 1);\r\n\r\n        if (stepElem) {\r\n            Tab.getOrCreateInstance(stepElem).show();\r\n\r\n            if (!this.step) {\r\n                this.step = _step;\r\n\r\n                if (this.step == 1)\r\n                    this.options.backBtn.setAttribute('disabled', '');\r\n                else\r\n                    this.options.backBtn.removeAttribute('disabled');\r\n                this.options.nextBtn.innerHTML = (this.step == this.stepList.length) ? this.options.lang.nextBtnSubmit : this.options.lang.nextBtn;\r\n                this.options.nextBtn.type      = 'button';\r\n            }\r\n        }\r\n        else\r\n            throw new Error('The step number to display is less than or greater than the number of recordfed steps.');\r\n    }\r\n\r\n    // --\r\n    public back () {\r\n        if (this.stepList.item(this.step - 1)) {\r\n            this.goTo(this.step - 1);\r\n\r\n            if (typeof this.options.onBack == 'function')\r\n                this.options.onBack(this.step);\r\n        }   \r\n    }\r\n\r\n    // --\r\n    public next() {\r\n        if (!this.checkValidityForm())\r\n            this.reportValidityForm();\r\n        else if (this.step == this.stepList.length) {\r\n            this.options.nextBtn.type = 'submit';\r\n            this.element.requestSubmit(this.options.nextBtn);\r\n        }\r\n        else {\r\n            this.goTo(this.step + 1);\r\n            \r\n            if (typeof this.options.onNext == 'function')\r\n                this.options.onNext(this.step);\r\n        }\r\n    }\r\n\r\n}\r\n"],"names":["defaultOptions","backBtn","undefined","class","activeStep","lang","nextBtn","nextBtnSubmit","fieldReqNotFocusable","onSubmit","onNext","onBack","onValidated","start","submitForm","useBootstrapValidation","BootstrapFormWizard","static","id","element","elementWrapper","options","step","stepList","stepPanelList","constructor","_dom","_opts","this","document","querySelector","Date","getTime","toString","dataset","bfwWrapper","tagName","toLowerCase","Error","Object","assign","type","innerHTML","setAttribute","onclick","event","back","next","onreset","goTo","onsubmit","preventDefault","loadListSteps","instances","push","checkValidityForm","isValid","noValidate","checkValidity","parentStepPanelElem","inStepPanel","arrStepPanel","Array","from","elements","filter","elem","parentElement","includes","indexOf","bfwInStep","Number","every","reportValidityForm","invalidElem","find","reportValidity","alert","querySelectorAll","length","arrSelectors","forEach","stepElem","index","stepPanelSelector","bsTarget","getAttribute","stepPanelElem","stepNum","role","addEventListener","currentStepElem","target","indexCurrentStep","removeAttribute","join","reset","_step","item","Tab","getOrCreateInstance","show","requestSubmit"],"mappings":"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"}